{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Desktop\\\\Banana - G\\\\client\\\\src\\\\pages\\\\GameLevels\\\\Components\\\\Level1.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Level1({\n  nextLevel,\n  updateScore,\n  score\n}) {\n  _s();\n  const [question, setQuestion] = useState({\n    text: \"What is the capital of France?\",\n    options: [\"Paris\", \"London\", \"Berlin\", \"Madrid\"],\n    answer: \"Paris\"\n  });\n  const handleAnswer = option => {\n    if (option === question.answer) {\n      updateScore(10);\n      nextLevel();\n    } else {\n      alert(\"Incorrect answer! Try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-blue-700\",\n        children: \"Level 1: Warm-Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-800\",\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4\",\n        children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(option),\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-700 transition duration-200\",\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Level1, \"DDShhRueGgkLafTEJbWQonIhMNU=\");\n_c = Level1;\nvar _c;\n$RefreshReg$(_c, \"Level1\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Level1","nextLevel","updateScore","score","_s","question","setQuestion","text","options","answer","handleAnswer","option","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Asus/OneDrive/Desktop/Banana - G/client/src/pages/GameLevels/Components/Level1.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function Level1({ nextLevel, updateScore, score }) {\r\n  const [question, setQuestion] = useState({\r\n    text: \"What is the capital of France?\",\r\n    options: [\"Paris\", \"London\", \"Berlin\", \"Madrid\"],\r\n    answer: \"Paris\"\r\n  });\r\n\r\n  const handleAnswer = (option) => {\r\n    if (option === question.answer) {\r\n      updateScore(10);\r\n      nextLevel();\r\n    } else {\r\n      alert(\"Incorrect answer! Try again.\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n       <div className=\"flex flex-col items-center space-y-6\">\r\n      <h2 className=\"text-xl font-semibold text-blue-700\">Level 1: Warm-Up</h2>\r\n      <p className=\"text-lg text-gray-800\">{question.text}</p>\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        {question.options.map((option) => (\r\n          <button\r\n            key={option}\r\n            onClick={() => handleAnswer(option)}\r\n            className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-700 transition duration-200\"\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,MAAMA,CAAC;EAAEC,SAAS;EAAEC,WAAW;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAChE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACvCU,IAAI,EAAE,gCAAgC;IACtCC,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAChDC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC/B,IAAIA,MAAM,KAAKN,QAAQ,CAACI,MAAM,EAAE;MAC9BP,WAAW,CAAC,EAAE,CAAC;MACfD,SAAS,CAAC,CAAC;IACb,CAAC,MAAM;MACLW,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAGD,oBACEb,OAAA;IAAAc,QAAA,eACGd,OAAA;MAAKe,SAAS,EAAC,sCAAsC;MAAAD,QAAA,gBACtDd,OAAA;QAAIe,SAAS,EAAC,qCAAqC;QAAAD,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzEnB,OAAA;QAAGe,SAAS,EAAC,uBAAuB;QAAAD,QAAA,EAAER,QAAQ,CAACE;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxDnB,OAAA;QAAKe,SAAS,EAAC,wBAAwB;QAAAD,QAAA,EACpCR,QAAQ,CAACG,OAAO,CAACW,GAAG,CAAER,MAAM,iBAC3BZ,OAAA;UAEEqB,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAACC,MAAM,CAAE;UACpCG,SAAS,EAAC,uFAAuF;UAAAD,QAAA,EAEhGF;QAAM,GAJFA,MAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKL,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACd,EAAA,CApCuBJ,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}