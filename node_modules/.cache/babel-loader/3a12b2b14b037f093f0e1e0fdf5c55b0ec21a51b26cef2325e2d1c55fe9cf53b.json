{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Desktop\\\\Banana - G\\\\client\\\\src\\\\pages\\\\GameLevels\\\\Components\\\\Level1.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Level1({\n  nextLevel,\n  updateScore,\n  score\n}) {\n  _s();\n  const [question, setQuestion] = useState({\n    text: \"What is the capital of France?\",\n    options: [\"Paris\", \"London\", \"Berlin\", \"Madrid\"],\n    answer: \"Paris\"\n  });\n  const [timer, setTimer] = useState(20 * 60); // 20 minutes in seconds\n  const [lives, setLives] = useState(5); // 5 lifelines available\n  const [quizEnded, setQuizEnded] = useState(false);\n\n  // Start the timer countdown\n  useEffect(() => {\n    if (timer === 0) {\n      setQuizEnded(true);\n      alert(\"Time's up! Game over.\");\n      return;\n    }\n    const interval = setInterval(() => {\n      if (timer > 0) {\n        setTimer(prev => prev - 1);\n      }\n    }, 1000);\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, [timer]);\n  const handleAnswer = option => {\n    if (quizEnded) return; // Prevent answering after time is up\n\n    if (option === question.answer) {\n      updateScore(10);\n      nextLevel();\n    } else {\n      alert(\"Incorrect answer! Try again.\");\n    }\n  };\n  const formatTime = timeInSeconds => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = timeInSeconds % 60;\n    return `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n  const useLifeline = () => {\n    if (lives > 0) {\n      setLives(lives - 1);\n      // Implement lifeline logic here (e.g., removing incorrect options)\n      alert(\"Lifeline used!\");\n    } else {\n      alert(\"No lifelines remaining!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-lg p-8 space-y-6 bg-white bg-opacity-90 rounded-lg shadow-lg backdrop-blur-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-center text-blue-700\",\n        children: \"Level 1: Warm-Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-gray-800\",\n          children: formatTime(timer)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-red-600\",\n          children: [\"Lives: \", lives]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-center text-gray-800\",\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4\",\n        children: question.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(option),\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-700 transition duration-200\",\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: useLifeline,\n          className: \"px-4 py-2 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 transition duration-200\",\n          children: [\"Use Lifeline (\", lives, \" remaining)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Level1, \"24bxHZSwpQ0Up1O7d6kvlOVnatU=\");\n_c = Level1;\nvar _c;\n$RefreshReg$(_c, \"Level1\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Level1","nextLevel","updateScore","score","_s","question","setQuestion","text","options","answer","timer","setTimer","lives","setLives","quizEnded","setQuizEnded","alert","interval","setInterval","prev","clearInterval","handleAnswer","option","formatTime","timeInSeconds","minutes","Math","floor","seconds","useLifeline","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Asus/OneDrive/Desktop/Banana - G/client/src/pages/GameLevels/Components/Level1.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function Level1({ nextLevel, updateScore, score }) {\r\n  const [question, setQuestion] = useState({\r\n    text: \"What is the capital of France?\",\r\n    options: [\"Paris\", \"London\", \"Berlin\", \"Madrid\"],\r\n    answer: \"Paris\"\r\n  });\r\n\r\n  const [timer, setTimer] = useState(20 * 60); // 20 minutes in seconds\r\n  const [lives, setLives] = useState(5); // 5 lifelines available\r\n  const [quizEnded, setQuizEnded] = useState(false);\r\n\r\n  // Start the timer countdown\r\n  useEffect(() => {\r\n    if (timer === 0) {\r\n      setQuizEnded(true);\r\n      alert(\"Time's up! Game over.\");\r\n      return;\r\n    }\r\n\r\n    const interval = setInterval(() => {\r\n      if (timer > 0) {\r\n        setTimer(prev => prev - 1);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, [timer]);\r\n\r\n  const handleAnswer = (option) => {\r\n    if (quizEnded) return; // Prevent answering after time is up\r\n\r\n    if (option === question.answer) {\r\n      updateScore(10);\r\n      nextLevel();\r\n    } else {\r\n      alert(\"Incorrect answer! Try again.\");\r\n    }\r\n  };\r\n\r\n  const formatTime = (timeInSeconds) => {\r\n    const minutes = Math.floor(timeInSeconds / 60);\r\n    const seconds = timeInSeconds % 60;\r\n    return `${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n  };\r\n\r\n  const useLifeline = () => {\r\n    if (lives > 0) {\r\n      setLives(lives - 1);\r\n      // Implement lifeline logic here (e.g., removing incorrect options)\r\n      alert(\"Lifeline used!\");\r\n    } else {\r\n      alert(\"No lifelines remaining!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n      <div className=\"w-full max-w-lg p-8 space-y-6 bg-white bg-opacity-90 rounded-lg shadow-lg backdrop-blur-sm\">\r\n        <h2 className=\"text-2xl font-semibold text-center text-blue-700\">Level 1: Warm-Up</h2>\r\n        \r\n        <div className=\"flex justify-between items-center\">\r\n          <p className=\"text-lg text-gray-800\">{formatTime(timer)}</p>\r\n          <p className=\"text-lg text-red-600\">Lives: {lives}</p>\r\n        </div>\r\n\r\n        <p className=\"text-lg text-center text-gray-800\">{question.text}</p>\r\n        \r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          {question.options.map((option) => (\r\n            <button\r\n              key={option}\r\n              onClick={() => handleAnswer(option)}\r\n              className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-700 transition duration-200\"\r\n            >\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"mt-4 text-center\">\r\n          <button\r\n            onClick={useLifeline}\r\n            className=\"px-4 py-2 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 transition duration-200\"\r\n          >\r\n            Use Lifeline ({lives} remaining)\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}